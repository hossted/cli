name: Build Go Binary

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
# general env vars      
env:
  LOKI_URL: ${{ secrets.LOKI_URL }}
  LOKI_USERNAME: ${{ secrets.LOKI_USERNAME }}
  LOKI_PASSWORD: ${{ secrets.LOKI_PASSWORD }}
  MIMIR_USERNAME: ${{ secrets.MIMIR_USERNAME }}
  MIMIR_PASSWORD: ${{ secrets.MIMIR_PASSWORD }}
  HOSSTED_AUTH_TOKEN: ${{ secrets.HOSSTED_AUTH_TOKEN }}
  VERSION: "0.4.4"
jobs:
  build-binary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19' # Specify the Go version you are using

      - name: Inject secrets and build
        env:
          LOKI_URL: ${{ secrets.LOKI_URL }}
          HOSSTED_API_URL: ${{ secrets.HOSSTED_API_URL }}
          MIMIR_URL: ${{ secrets.MIMIR_URL }}
          COMMIT_HASH: ${{ github.sha }}
        run: |
          BUILD_TIMESTAMP="$(date '+%Y-%m-%d')"
          echo "$BUILD_TIMESTAMP BUILD_TIMESTAMP"
          echo "$COMMIT_HASH COMMIT_HASH"
          echo "$LOKI_URL LOKI_URL"
          GOOS=linux GOARCH=amd64 go build -ldflags "-X './cmd.VERSION=${VERSION}' -X './cmd.ENVIRONMENT=prod' -X './cmd.COMMITHASH=${COMMIT_HASH}' -X './cmd.BUILDTIME=${BUILD_TIMESTAMP}' -X main.lokiURL=$LOKI_URL -X main.lokiUsername=$LOKI_USERNAME -X main.lokiPassword=$LOKI_PASSWORD -X main.mimirUsername=$MIMIR_USERNAME -X main.mimirPassword=$MIMIR_PASSWORD -X main.hosstedAPIURL=$HOSSTED_API_URL -X main.mimirURL=$MIMIR_URL"  -o hossted-linux-amd64
          GOOS=darwin GOARCH=amd64 go build -ldflags "-X './cmd.VERSION=${VERSION}' -X './cmd.ENVIRONMENT=prod' -X './cmd.COMMITHASH=${COMMIT_HASH}' -X './cmd.BUILDTIME=${BUILD_TIMESTAMP}' -X main.lokiURL=$LOKI_URL -X main.lokiUsername=$LOKI_USERNAME -X main.lokiPassword=$LOKI_PASSWORD -X main.mimirUsername=$MIMIR_USERNAME -X main.mimirPassword=$MIMIR_PASSWORD -X main.hosstedAPIURL=$HOSSTED_API_URL -X main.mimirURL=$MIMIR_URL" -o hossted-darwin-amd64
         # GOOS=linux GOARCH=amd64 go build -ldflags "-X '${PACKAGE}/cmd.VERSION=dev' -X '${PACKAGE}/cmd.ENVIRONMENT=dev' -X '${PACKAGE}/cmd.COMMITHASH=${COMMIT_HASH}' -X '${PACKAGE}/cmd.BUILDTIME=${BUILD_TIMESTAMP}' -X main.lokiURL=$LOKI_URL -X main.lokiUsername=$LOKI_USERNAME -X main.lokiPassword=$LOKI_PASSWORD -X main.mimirUsername=$MIMIR_USERNAME -X main.mimirPassword=$MIMIR_PASSWORD -X main.hosstedAPIURL=$HOSSTED_API_URL -X main.mimirURL=$MIMIR_URL"  -o hossted-linux-amd64-dev
         # GOOS=darwin GOARCH=amd64 go build -ldflags "-X '${PACKAGE}/cmd.VERSION=dev' -X '${PACKAGE}/cmd.ENVIRONMENT=dev' -X '${PACKAGE}/cmd.COMMITHASH=${COMMIT_HASH}' -X '${PACKAGE}/cmd.BUILDTIME=${BUILD_TIMESTAMP}' -X main.lokiURL=$LOKI_URL -X main.lokiUsername=$LOKI_USERNAME -X main.lokiPassword=$LOKI_PASSWORD -X main.mimirUsername=$MIMIR_USERNAME -X main.mimirPassword=$MIMIR_PASSWORD -X main.hosstedAPIURL=$HOSSTED_API_URL -X main.mimirURL=$MIMIR_URL"  -o hossted-darwin-amd64-dev

      - name: Upload Linux Production binary
        uses: actions/upload-artifact@v4
        with:
          name: hossted-linux-amd64
          path: ./hossted-linux-amd64
          if-no-files-found: error
          
      - name: Upload OSx Production binary
        uses: actions/upload-artifact@v4
        with:
          name: hossted-darwin-amd64
          path: ./hossted-darwin-amd64
          if-no-files-found: error
