name: Reusable Workflow

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      environment:
        required: true
        type: string
      is-production:
        required: true
        type: boolean

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Inject secrets and build
      env:
          LOKI_USERNAME: ${{ secrets.LOKI_USERNAME }}
          LOKI_PASSWORD: ${{ secrets.LOKI_PASSWORD }}
          MIMIR_USERNAME: ${{ secrets.MIMIR_USERNAME }}
          MIMIR_PASSWORD: ${{ secrets.MIMIR_PASSWORD }}
          HOSSTED_AUTH_TOKEN: ${{ secrets.HOSSTED_AUTH_TOKEN }}
          LOKI_URL: ${{ secrets.LOKI_URL }}
          LOKI_DEV_URL: ${{ secrets.LOKI_DEV_URL }}
          HOSSTED_API_URL: ${{ secrets.HOSSTED_API_URL }}
          HOSSTED_DEV_API_URL: ${{ secrets.HOSSTED_DEV_API_URL }}
          MIMIR_URL: ${{ secrets.MIMIR_URL }}
          MIMIR_DEV_URL: ${{ secrets.MIMIR_DEV_URL }}
          HOSSTED_DEV_CLIENT_ID: ${{ secrets.HOSSTED_DEV_CLIENT_ID }}
          HOSSTED_DEV_AUTH_URL: ${{ secrets.HOSSTED_DEV_AUTH_URL }}
          COMMIT_HASH: ${{ github.sha }}
          VERSION: ${{ inputs.version }}
          ENVIRONMENT: ${{ inputs.environment }}
      run: |
        if [ "${{ inputs.is-production }}" == "true" ]; then
          make -f Makefile linux && cp bin/linux/hossted-linux-amd64 bin/linux/hossted-${{ inputs.version }}-linux-amd64
          make -f Makefile osx && cp bin/osx/hossted-darwin-amd64 bin/osx/hossted-${{ inputs.version }}-darwin-amd64
        else
          make -f Makefile linux-dev
          make -f Makefile osx-dev
        fi
    
    - name: Test Version of binary file
      run: |
        echo "Checking version of binary file..."
        if [ "${{ inputs.is-production }}" == "true" ]; then
          chmod 777 bin/linux/hossted-linux-amd64 && ./bin/linux/hossted-linux-amd64 version
        else
          chmod 777  bin/dev/hossted-dev-linux-amd64 && ./bin/dev/hossted-dev-linux-amd64 version
        fi
        
    - name: Upload Linux binary
      if: ${{ inputs.is-production }}
      uses: actions/upload-artifact@v4
      with:
        name: hossted-${{ inputs.version }}-linux-amd64
        path: ./bin/linux/hossted-${{ inputs.version }}-linux-amd64
        if-no-files-found: error
        
    - name: Upload OSx binary
      if: ${{ inputs.is-production }}
      uses: actions/upload-artifact@v4
      with:
        name: hossted-${{ inputs.version }}-darwin-amd64
        path: ./bin/osx/hossted-${{ inputs.version }}-darwin-amd64
        if-no-files-found: error
    
    - name: Upload Linux DEV binary
      if: ${{ !inputs.is-production }}
      uses: actions/upload-artifact@v4
      with:
        name: hossted-dev-linux-amd64
        path: ./bin/dev/hossted-dev-linux-amd64
        if-no-files-found: error
    
    - name: Upload OSx DEV binary
      if: ${{ !inputs.is-production }}
      uses: actions/upload-artifact@v4
      with:
        name: hossted-dev-darwin-amd64
        path: ./bin/dev/hossted-dev-darwin-amd64
        if-no-files-found: error
    
    - name: Create GitHub Release
      if: ${{ inputs.is-production }}
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        files: |
            ./bin/linux/hossted-${{ inputs.version }}-linux-amd64
            ./bin/osx/hossted-${{ inputs.version }}-darwin-amd64
        name: Release ${{ github.ref_name }}
        body: |
          Automated release created for tag ${{ github.ref_name }}.
          This release includes the latest production build.
        draft: true
        generate_release_notes: true
        prerelease: false
    
