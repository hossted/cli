package hossted

import (
	"crypto/tls"
	"net/http"
)

// Send sends a request to hossted API server with parameters
// TODO: This is insecure; use only in dev environments.
// TODO: Add timeout context
func (h *HosstedRequest) Send() (string, error) {
	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go
	// curl -k -H "Authorization: Basic FrTc3TlygOaFDQOGmteaQ7LRwKOx8XNIGfmLa5NA" -X POST --compressed "https://app.dev.hossted.com/api/register?uuid=$UUID&email=$EMAIL&organization=$ORGANIZATION"

	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}

	endpoint := "https://app.dev.hossted.com/api/register?uuid=55cdfdae-ce22-4c36-8513-b09df945734a&email=0chun0@gmail.com&organization=asdf"
	req, err := http.NewRequest("POST", endpoint, nil)
	if err != nil {
		// handle err
	}
	req.Header.Set("Authorization", "Basic FrTc3TlygOaFDQOGmteaQ7LRwKOx8XNIGfmLa5NA")

	resp, err := client.Do(req)
	if err != nil {
		// handle err
	}
	defer resp.Body.Close()
	return "", nil
}
